{"version":3,"sources":["actions/LoginActions.jsx","reducers/LoginReducer.jsx","actions/SignUpActions.jsx","reducers/SignUpReducer.jsx","actions/FavoritesActions.jsx","reducers/FavoritesReducer.jsx","Store.jsx","components/PlayerSearch.jsx","components/NavBar.jsx","components/teams.js","components/Feed.jsx","components/Home.jsx","components/Login.jsx","components/SignUp.jsx","components/SinglePlayer.jsx","components/PlayerResults.jsx","components/Favorites.jsx","App.js","serviceWorker.js","index.js"],"names":["GET_USER","gotMe","user","type","loginReducer","state","arguments","length","undefined","action","Object","objectSpread","CREATE_USER","createUserThunk","newUser","dispatch","axios","post","then","res","data","payload","createUser","catch","err","console","log","signUpReducer","ADD_FAVORITE","DELETE_FAVORITE","FETCH_FAVORITES","addFavoriteThunk","playerID","userId","concat","addFavorite","deleteFavoriteThunk","delete","deleteFavorite","fetchFavoritesThunk","get","favorites","map","_ref","id","players","i","curr","stats","sort","a","b","Date","game","date","newPlayer","playerName","player","first_name","last_name","push","favoriteReducer","toConsumableArray","playerId","filter","rootReducer","combineReducers","middleWare","thunkMiddleware","store","createStore","applyMiddleware","loggerMiddleware","PlayerSearch","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","target","value","fetchSearch","results","bind","assertThisInitialized","query","url","setState","_context","t0","list","playerObj","react_default","createElement","react_router_dom","to","key","name","placeholder","onChange","Component","NavBar","handleLogOut","logOut","onClick","components_PlayerSearch","connect","teamObject","abbreviation","city","conference","division","full_name","meta","total_pages","current_page","next_page","per_page","total_count","Feed","componentDidUpdate","prevProps","playersInfo","getTeam","playerTeamId","homeTeamId","awayTeamId","teams","getDate","toDateString","fetchFavorites","_this2","className","slice","stat","team","home_team_id","visitor_team_id","pts","Home","components_NavBar","components_Feed","Login","defineProperty","handleSubmit","email","password","userLogin","react_router","formData","put","SignUp","SinglePlayer","fetchSinglePlayerStats","response","result","gameInfo","visitorId","homeTeam","find","elem","teamInfo","visitorInfo","homeInfo","gameStats","playerInfo","fetchPlayerInformation","info","favorite","unFavorite","componentDidMount","match","params","gameID","pass","height_feet","height_inches","weight_pounds","position","home_team_score","visitor_team_score","dreb","ast","fg_pct","blk","ft_pct","Favorites","userID","App","intializeData","exact","path","component","render","components_SinglePlayer","components_Favorites","Boolean","window","location","hostname","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd9a950b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const GET_USER = \"GET_USER\";\n\n\nconst gotMe = (user) => ({\n\n    type: GET_USER,\n        user\n\n}); // end of gotMe\n\n\nexport const getMe = () => (dispatch) => {\n  return axios.get('http://localhost:5000/api/auth/me')\n    .then(res => res.data)\n    .then(user => dispatch(gotMe(user)))\n    .catch(err => console.log(err));\n\n}; // end of getMe\n\n\nexport const userLogin = (formData) => (dispatch) => {\n\n    return axios.put('http://localhost:5000/api/auth/login', formData)\n        .then(res => res.data)\n        .then(user => dispatch(gotMe(user)))\n        .catch(err => console.log(err));\n\n}; // end of userLoginThunk\n\n\nexport const userLogOut = () => (dispatch) => {\n\n    return axios.delete('http://localhost:5000/api/auth/logout')\n        .then(() => dispatch(gotMe({})))\n        .catch(err => console.log(err));\n\n}; // end of userLogOut\n","import {GET_USER} from '../actions/LoginActions';\n\nfunction loginReducer(state = {\n    user: {}\n}, action) {\n\n    switch(action.type) {\n\n        case GET_USER: {\n\n            return {\n                ...state,\n                user: action.user\n            };\n        }\n        default:\n            return state;\n    };\n\n}; // end of loginReducer\n\nexport default loginReducer;\n","import axios from 'axios';\nexport const CREATE_USER = \"CREATE_USER\";\n\n\nconst createUser = (newUser) => {\n  return {\n    type: CREATE_USER,\n    payload: newUser\n  };\n\n}; // end of createUser\n\nexport const createUserThunk = (newUser) => (dispatch) => {\n\n\treturn axios\n\t\t.post('http://localhost:5000/api/users', newUser)\n\t\t.then(res => res.data)\n\t\t.then(newUser => dispatch(createUser(newUser)))\n        .catch(err => console.log(err));\n\n}; // end of createUserThunk\n","import {CREATE_USER} from '../actions/SignUpActions';\n\nfunction signUpReducer(state = {\n    user: {}\n}, action) {\n\n    switch(action.type) {\n        \n        case CREATE_USER: {\n            return action.payload;\n        }\n        default:\n            return state;\n    };\n\n}; // end of signUpReducer\n\nexport default signUpReducer;\n","import axios from 'axios';\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const DELETE_FAVORITE = 'DELETE_FAVORITE';\nexport const FETCH_FAVORITES = 'FETCH_FAVORITES'\n\n\nconst addFavorite = (playerID) => {\n\treturn {\n\t\ttype: ADD_FAVORITE,\n\t\tpayload: playerID\n\t}\n};\n\nconst deleteFavorite = (playerID) => {\n\treturn {\n\t\ttype: DELETE_FAVORITE,\n\t\tpayload: playerID\n\t}\n}\n\nconst fetchFavorites = (data) => {\n\treturn {\n\ttype: FETCH_FAVORITES,\n\tpayload: data\n\t}\n}\n// thunks\n\nexport const addFavoriteThunk = (playerID, userId) => (dispatch) => {\n\t//\n\t\treturn axios\n\t\t.post(`http://localhost:5000/api/users/${userId}/players/${playerID}`, playerID)\n\t\t.then(res => res.data)\n\t\t.then(playerID => dispatch(addFavorite(playerID)))\n        .catch(err => console.log(err));\n};\n\nexport const deleteFavoriteThunk = (playerID, userId) => (dispatch) => {\n\tconsole.log(userId);\n\treturn axios\n\t.delete(`http://localhost:5000/api/users/${userId}/players/${playerID}`, playerID)\n\t.then(res => res.data)\n\t.then(playerID => dispatch(deleteFavorite(playerID)))\n\t.catch(err => console.log(err));\n};\n\nexport const fetchFavoritesThunk = (userId) => (dispatch) => {\n\tconsole.log('user id ',userId)\n\treturn axios\n\t.get(`http://localhost:5000/api/users/${userId}/favorites/`)\n\t.then(res => {\n\n\t\tconst favorites = res.data.map(({id}) => id);\n\n\t\tlet players = [];\n\n\t\tfor(let i = 0; i < favorites.length; i++) {\n            console.log('THE LOOP IS RUNNING THE LOOP IS RUNNING THE LOOP IS RUNNING ')\n            let curr = favorites[i];\n\n            // stats fetched are for the current (2018-19) season only\n            axios.get(`https://www.balldontlie.io/api/v1/stats?seasons[]=2018&player_ids[]=${curr}&per_page=100`)\n\n                .then(res => {\n                        console.log('RESULT OF API CALL =======>>>', res)\n                    // stats are sorted by date because the stats come in with\n                    // the games out of order\n\n\t\t\t\t\tconsole.log('stats is ', res.data.data);\n                    const stats = res.data.data.sort((a, b) => {\n\n                        return new Date(b.game.date) - new Date(a.game.date);\n                    });\n                    //stats[0] = {player: {first_name: 'Bob', last_name: 'Barker'}}\n                    let playerName = stats[0].player.first_name + \" \" + stats[0].player.last_name;\n\n                    // an object is created to give each player their games stats\n                    // so that when these stats are outputted, the name of the player\n                    // is not displayed each time the stats are mapped\n                    const newPlayer = {\n                        playerName: playerName,\n                        stats: stats\n                    };\n                    players.push(newPlayer)\n\n\t\t\t\t\treturn players;\n\n                })\n\t\t\t\t.then(players => dispatch(fetchFavorites(players)))\n                .catch(err => console.log(err));\n        }\n\t})\n\t// .then(data => dispatch(fetchFavorites(data)))\n\t.catch(err => console.log(err));\n\n\n\n}\n","import {ADD_FAVORITE, DELETE_FAVORITE, FETCH_FAVORITES} from '../actions/FavoritesActions';\n\n// const initialState = [];\n\n\nfunction favoriteReducer(state = [],\n\taction)\n{\n\t//console.log(\"received action\", action.type)\n\n\tswitch(action.type) {\n\t\tcase ADD_FAVORITE:\n\t\t\treturn [...state, action.payload.playerId]\n\t\tcase DELETE_FAVORITE:\n\t\t\treturn state = state.filter(state => state !== action.payload.playerId)\n\t\tcase FETCH_FAVORITES:\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\taction.payload\n\t\t\t];\n\n\tdefault:\n\t\treturn state\n}\n}\nexport default favoriteReducer;\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport loggerMiddleware from 'redux-logger'\nimport loginReducer from './reducers/LoginReducer';\nimport signUpReducer from './reducers/SignUpReducer';\nimport favoriteReducer from './reducers/FavoritesReducer';\n\nconst rootReducer = combineReducers({\n    loginReducer,\n    signUpReducer,\n    favoriteReducer\n});\n\nconst middleWare = thunkMiddleware\n\nconst store = createStore(rootReducer, applyMiddleware(middleWare, loggerMiddleware));\n\nexport default store;\n","/* Player Search Smart Component that will\n *  handle the search bar form and\n * will pass the form results to the Results Page\n*/\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nclass PlayerSearch extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t//\tquery: '',\n\t\t\tresults: []\n\t\t};\n\n\t\tthis.fetchSearch = this.fetchSearch.bind(this);\n\t};\n\n\tasync fetchSearch(query) {\n\t\tlet url = \"https://www.balldontlie.io/api/v1/players?search=\" + query;\n\n\t\ttry\n\t\t{\n\t\t\tlet { data }  = await axios.get(url);\n\t\t\tthis.setState({results: data.data});\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\n\thandleChange = (event) => {\n\n\t\t// if the search bar is empty request gibberish from the api, so that\n\t\t// the api is not sending its default data\n\t\tif(event.target.value === '')\n\t\t\tthis.fetchSearch('ababababababab');\n\t\telse\n        \tthis.fetchSearch(event.target.value);\n\t};\n\n\t// All of these individual list items representing player objects\n\t// should link to the Single Player container/view and pass down props\n\trender() {\n\n\t\tconst playerObj = this.state.results;\n\t\tconst list = playerObj.map((playerObj) =>\n\t\t\t<Link to ={`/player/${playerObj.id}`} key={playerObj.id}>\n\t\t\t<li> {playerObj.first_name + \"\\n\"} {playerObj.last_name + \"\\n\" } </li>\n\t\t\t</Link>\n\t\t\t);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form name='PlayerSearch'>\n            \t\t<input type='text' name='query' placeholder='Search for a player' onChange={this.handleChange}/>\n        \t\t</form>\n\n        \t\t<ul>\n\t\t\t\t\t{list}\n\t\t\t\t</ul>\n      \t\t</div>\n\n  \t\t);\n\t}\n};\n\nexport default PlayerSearch;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {userLogOut} from '../actions/LoginActions';\nimport PlayerSearch from './PlayerSearch';\n\nconst mapStates = (state) => {\n    return {\n        user: state.loginReducer.user\n    };\n\n}; // end of mapStates\n\n\nconst mapDispatch = (dispatch) => {\n    return {\n        logOut: () => {\n            dispatch(userLogOut())\n        }\n    };\n\n}; // end of mapDispatch\n\nclass NavBar extends Component {\n\n    constructor(props){\n        super(props);\n\n    }; // end of contructor\n\n    handleLogOut = () => {\n\n        this.props.logOut();\n\n    }; // end of handleLogOut\n\n    render() {\n\n        if(this.props.user.id) {\n            return (\n                <div>\n                    <nav>\n                        <Link to='/'> Home </Link>\n                        <Link to='/' onClick={this.handleLogOut}>\n                            Logout\n                        </Link>\n                        <PlayerSearch />\n                    </nav>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>\n                    <nav>\n                        <Link to='/'> Home </Link>\n                        <Link to='/Login'> Login </Link>\n                        <Link to ='/SignUp'> Sign Up </Link>\n                        <PlayerSearch />\n                    </nav>\n                </div>\n            );\n\n        }\n\n    }; // end of render\n\n}; // end of NavBar\n\nexport default connect(mapStates, mapDispatch)(NavBar);\n","export const teamObject = {\n  \"data\": [\n    {\n      \"id\": 1,\n      \"abbreviation\": \"ATL\",\n      \"city\": \"Atlanta\",\n      \"conference\": \"East\",\n      \"division\": \"Southeast\",\n      \"full_name\": \"Atlanta Hawks\",\n      \"name\": \"Hawks\"\n    },\n    {\n      \"id\": 2,\n      \"abbreviation\": \"BOS\",\n      \"city\": \"Boston\",\n      \"conference\": \"East\",\n      \"division\": \"Atlantic\",\n      \"full_name\": \"Boston Celtics\",\n      \"name\": \"Celtics\"\n    },\n    {\n      \"id\": 3,\n      \"abbreviation\": \"BKN\",\n      \"city\": \"Brooklyn\",\n      \"conference\": \"East\",\n      \"division\": \"Atlantic\",\n      \"full_name\": \"Brooklyn Nets\",\n      \"name\": \"Nets\"\n    },\n    {\n      \"id\": 4,\n      \"abbreviation\": \"CHA\",\n      \"city\": \"Charlotte\",\n      \"conference\": \"East\",\n      \"division\": \"Southeast\",\n      \"full_name\": \"Charlotte Hornets\",\n      \"name\": \"Hornets\"\n    },\n    {\n      \"id\": 5,\n      \"abbreviation\": \"CHI\",\n      \"city\": \"Chicago\",\n      \"conference\": \"East\",\n      \"division\": \"Central\",\n      \"full_name\": \"Chicago Bulls\",\n      \"name\": \"Bulls\"\n    },\n    {\n      \"id\": 6,\n      \"abbreviation\": \"CLE\",\n      \"city\": \"Cleveland\",\n      \"conference\": \"East\",\n      \"division\": \"Central\",\n      \"full_name\": \"Cleveland Cavaliers\",\n      \"name\": \"Cavaliers\"\n    },\n    {\n      \"id\": 7,\n      \"abbreviation\": \"DAL\",\n      \"city\": \"Dallas\",\n      \"conference\": \"West\",\n      \"division\": \"Southwest\",\n      \"full_name\": \"Dallas Mavericks\",\n      \"name\": \"Mavericks\"\n    },\n    {\n      \"id\": 8,\n      \"abbreviation\": \"DEN\",\n      \"city\": \"Denver\",\n      \"conference\": \"West\",\n      \"division\": \"Northwest\",\n      \"full_name\": \"Denver Nuggets\",\n      \"name\": \"Nuggets\"\n    },\n    {\n      \"id\": 9,\n      \"abbreviation\": \"DET\",\n      \"city\": \"Detroit\",\n      \"conference\": \"East\",\n      \"division\": \"Central\",\n      \"full_name\": \"Detroit Pistons\",\n      \"name\": \"Pistons\"\n    },\n    {\n      \"id\": 10,\n      \"abbreviation\": \"GSW\",\n      \"city\": \"Golden State\",\n      \"conference\": \"West\",\n      \"division\": \"Pacific\",\n      \"full_name\": \"Golden State Warriors\",\n      \"name\": \"Warriors\"\n    },\n    {\n      \"id\": 11,\n      \"abbreviation\": \"HOU\",\n      \"city\": \"Houston\",\n      \"conference\": \"West\",\n      \"division\": \"Southwest\",\n      \"full_name\": \"Houston Rockets\",\n      \"name\": \"Rockets\"\n    },\n    {\n      \"id\": 12,\n      \"abbreviation\": \"IND\",\n      \"city\": \"Indiana\",\n      \"conference\": \"East\",\n      \"division\": \"Central\",\n      \"full_name\": \"Indiana Pacers\",\n      \"name\": \"Pacers\"\n    },\n    {\n      \"id\": 13,\n      \"abbreviation\": \"LAC\",\n      \"city\": \"LA\",\n      \"conference\": \"West\",\n      \"division\": \"Pacific\",\n      \"full_name\": \"LA Clippers\",\n      \"name\": \"Clippers\"\n    },\n    {\n      \"id\": 14,\n      \"abbreviation\": \"LAL\",\n      \"city\": \"Los Angeles\",\n      \"conference\": \"West\",\n      \"division\": \"Pacific\",\n      \"full_name\": \"Los Angeles Lakers\",\n      \"name\": \"Lakers\"\n    },\n    {\n      \"id\": 15,\n      \"abbreviation\": \"MEM\",\n      \"city\": \"Memphis\",\n      \"conference\": \"West\",\n      \"division\": \"Southwest\",\n      \"full_name\": \"Memphis Grizzlies\",\n      \"name\": \"Grizzlies\"\n    },\n    {\n      \"id\": 16,\n      \"abbreviation\": \"MIA\",\n      \"city\": \"Miami\",\n      \"conference\": \"East\",\n      \"division\": \"Southeast\",\n      \"full_name\": \"Miami Heat\",\n      \"name\": \"Heat\"\n    },\n    {\n      \"id\": 17,\n      \"abbreviation\": \"MIL\",\n      \"city\": \"Milwaukee\",\n      \"conference\": \"East\",\n      \"division\": \"Central\",\n      \"full_name\": \"Milwaukee Bucks\",\n      \"name\": \"Bucks\"\n    },\n    {\n      \"id\": 18,\n      \"abbreviation\": \"MIN\",\n      \"city\": \"Minnesota\",\n      \"conference\": \"West\",\n      \"division\": \"Northwest\",\n      \"full_name\": \"Minnesota Timberwolves\",\n      \"name\": \"Timberwolves\"\n    },\n    {\n      \"id\": 19,\n      \"abbreviation\": \"NOP\",\n      \"city\": \"New Orleans\",\n      \"conference\": \"West\",\n      \"division\": \"Southwest\",\n      \"full_name\": \"New Orleans Pelicans\",\n      \"name\": \"Pelicans\"\n    },\n    {\n      \"id\": 20,\n      \"abbreviation\": \"NYK\",\n      \"city\": \"New York\",\n      \"conference\": \"East\",\n      \"division\": \"Atlantic\",\n      \"full_name\": \"New York Knicks\",\n      \"name\": \"Knicks\"\n    },\n    {\n      \"id\": 21,\n      \"abbreviation\": \"OKC\",\n      \"city\": \"Oklahoma City\",\n      \"conference\": \"West\",\n      \"division\": \"Northwest\",\n      \"full_name\": \"Oklahoma City Thunder\",\n      \"name\": \"Thunder\"\n    },\n    {\n      \"id\": 22,\n      \"abbreviation\": \"ORL\",\n      \"city\": \"Orlando\",\n      \"conference\": \"East\",\n      \"division\": \"Southeast\",\n      \"full_name\": \"Orlando Magic\",\n      \"name\": \"Magic\"\n    },\n    {\n      \"id\": 23,\n      \"abbreviation\": \"PHI\",\n      \"city\": \"Philadelphia\",\n      \"conference\": \"East\",\n      \"division\": \"Atlantic\",\n      \"full_name\": \"Philadelphia 76ers\",\n      \"name\": \"76ers\"\n    },\n    {\n      \"id\": 24,\n      \"abbreviation\": \"PHX\",\n      \"city\": \"Phoenix\",\n      \"conference\": \"West\",\n      \"division\": \"Pacific\",\n      \"full_name\": \"Phoenix Suns\",\n      \"name\": \"Suns\"\n    },\n    {\n      \"id\": 25,\n      \"abbreviation\": \"POR\",\n      \"city\": \"Portland\",\n      \"conference\": \"West\",\n      \"division\": \"Northwest\",\n      \"full_name\": \"Portland Trail Blazers\",\n      \"name\": \"Trail Blazers\"\n    },\n    {\n      \"id\": 26,\n      \"abbreviation\": \"SAC\",\n      \"city\": \"Sacramento\",\n      \"conference\": \"West\",\n      \"division\": \"Pacific\",\n      \"full_name\": \"Sacramento Kings\",\n      \"name\": \"Kings\"\n    },\n    {\n      \"id\": 27,\n      \"abbreviation\": \"SAS\",\n      \"city\": \"San Antonio\",\n      \"conference\": \"West\",\n      \"division\": \"Southwest\",\n      \"full_name\": \"San Antonio Spurs\",\n      \"name\": \"Spurs\"\n    },\n    {\n      \"id\": 28,\n      \"abbreviation\": \"TOR\",\n      \"city\": \"Toronto\",\n      \"conference\": \"East\",\n      \"division\": \"Atlantic\",\n      \"full_name\": \"Toronto Raptors\",\n      \"name\": \"Raptors\"\n    },\n    {\n      \"id\": 29,\n      \"abbreviation\": \"UTA\",\n      \"city\": \"Utah\",\n      \"conference\": \"West\",\n      \"division\": \"Northwest\",\n      \"full_name\": \"Utah Jazz\",\n      \"name\": \"Jazz\"\n    },\n    {\n      \"id\": 30,\n      \"abbreviation\": \"WAS\",\n      \"city\": \"Washington\",\n      \"conference\": \"East\",\n      \"division\": \"Southeast\",\n      \"full_name\": \"Washington Wizards\",\n      \"name\": \"Wizards\"\n    }\n  ],\n  \"meta\": {\n    \"total_pages\": 1,\n    \"current_page\": 1,\n    \"next_page\": null,\n    \"per_page\": 30,\n    \"total_count\": 30\n  }\n}\n","import React, {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {teamObject} from './teams';\nimport {fetchFavoritesThunk} from '../actions/FavoritesActions';\n\n\nconst mapStates = (state) => {\n\n    return {\n        playersInfo: state.favoriteReducer,\n        user: state.loginReducer.user\n    };\n\n}; // end of mapStates\n\nconst mapDispatch = (dispatch) => {\n\n    return {\n        fetchFavorites: (id) => {\n            dispatch(fetchFavoritesThunk(id));\n        }\n    };\n\n} // end of mapDispatch\n\n\nclass Feed extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playersInfo: []\n        }\n\n    }; // end of constructor\n\n\n    componentDidMount() {\n        // this.props.fetchFavorites(this.props.user.id)\n        // const favorites = this.props.favorites;\n        // const favorites = [274,238]\n        // await this.getPlayerInfo(favorites);\n        // console.log('user is ', this.props.user.id)\n        console.log('Component did mount')\n        this.props.fetchFavorites(this.props.user.id);\n        this.setState({\n            playersInfo: this.props.playersInfo\n        })\n    }; // end of componentDidMount\n\n    componentDidUpdate = (prevProps) => {\n\n        if(prevProps !== this.props) {\n        this.setState({\n            playersInfo: this.props.playersInfo\n        })\n    }\n    }\n\n    // componentDidUpdate = (prevProps, prevState) => {\n    //     console.log(\"Component UPDATEED\")\n    //     // if(prevProps.favorites !== this.props.favorites) {\n    //     //     const favorites = this.props.favorites\n    //     //     this.getPlayerInfo(favorites);\n    //     // console.log('cur props', this.state.favorites);\n    //     // console.log('prev props ', prevProps.favorites);\n    //     // // this.getPlayerInfo()\n    //     //\n    //     // }\n    //     console.log('STATE', this.state.favorites)\n    //     console.log('PROPS',this.props.favorites);\n    //     console.log(\"PREVPROPS\",prevProps.favorites)\n    //     if(this.state.favorites.length !== this.props.favorites.length) {\n    //     this.setState({\n    //         favorites: this.props.favorites\n    //     })\n    // }\n    // }\n\n\n\n\n    // fecthes the stats of the players favorited by the user\n    //  getPlayerInfo = async () => {\n    //     // console.log('USER ID', this.props.user.id)\n    //     await this.props.fetchFavorites(this.props.user.id)\n    //     // console.log('favs are ', this.props.favorites)\n    //     console.log(\"Fetch player info\")\n    //     const favorites = this.props.favorites;\n    //     const players = []\n    //     // have to go through each favorites player ID individually due to API constraints\n    //     for(let i = 0; i < favorites.length; i++) {\n    //         console.log('THE LOOP IS RUNNING THE LOOP IS RUNNING THE LOOP IS RUNNING ')\n    //         let curr = favorites[i];\n    //\n    //         // stats fetched are for the current (2018-19) season only\n    //         axios.get(`https://www.balldontlie.io/api/v1/stats?seasons[]=2018&player_ids[]=${curr}&per_page=100`)\n    //\n    //             .then(res => {\n    //                     console.log('RESULT OF API CALL =======>>>', res)\n    //                 // stats are sorted by date because the stats come in with\n    //                 // the games out of order\n    //                 const stats = res.data.data.sort((a, b) => {\n    //\n    //                     return new Date(b.game.date) - new Date(a.game.date);\n    //                 });\n    //                 //stats[0] = {player: {first_name: 'Bob', last_name: 'Barker'}}\n    //                 let playerName = stats[0].player.first_name + \" \" + stats[0].player.last_name;\n    //\n    //                 // an object is created to give each player their games stats\n    //                 // so that when these stats are outputted, the name of the player\n    //                 // is not displayed each time the stats are mapped\n    //                 const newPlayer = {\n    //                     playerName: playerName,\n    //                     stats: stats\n    //                 };\n    //                 players.push(newPlayer)\n    //                 this.setState({playersInfo: players})\n    //             //\n    //             //\n    //             })\n    //             .catch(err => console.log(err));\n    //     }\n    //     console.log('NEW PLAYERS', players)\n    //     // await this.setState({\n    //     //     playersInfo: players\n    //     // });\n    //\n    // } // end of getPlayerInfo\n\n\n    // returns the opposing team faced by the player in a particular game\n    getTeam = (playerTeamId, homeTeamId, awayTeamId) => {\n\n        const teams = teamObject.data;\n\n        for(let i = 0; i < teams.length; i++) {\n            if(playerTeamId == homeTeamId && teams[i].id == awayTeamId)\n                return teams[i].full_name;\n            else if(playerTeamId == awayTeamId && teams[i].id == homeTeamId)\n                return teams[i].full_name;\n        }\n\n    } // end of getTeam\n\n\n    // returns a nicer looking date, as opposed to the one from the API\n    getDate = (date) => {\n        const newDate = new Date(date);\n\n        return newDate.toDateString();\n\n    } // end of getDate\n\n\n    render() {\n        console.log('NEW RENDER', this.props)\n        return (\n\n            <div className='FeedRender'>\n\n                <h1> Feed </h1>\n\n                <hr/>\n\n                {/* if the user is logged in or not */}\n                {this.props.user.id && this.props.playersInfo[0] ? (\n\n                    <div>\n                    <p> FEED IS HERE </p>\n                    {console.log('player info is ', this.props.playersInfo)}\n                        {this.props.playersInfo[0].map(player =>\n                            <div >\n                            {console.log('player is ', player)}\n\n                                <h3> {player.playerName} </h3>\n\n                                <Link to= {`player/${player.stats[0].player.id}`}>\n                                    View More\n                                </Link>\n\n                                {/* map only the 5 most recent games */}\n                                {player.stats.slice(0, 5).map(stat =>\n\n                                    <div key={stat.game.id}>\n\n                                        <h4>\n                                            Against: {this.getTeam(stat.team.id,\n                                            stat.game.home_team_id, stat.game.visitor_team_id)} on\n                                            {\" \"} {this.getDate(stat.game.date)}\n                                        </h4>\n\n                                        <p> Points Scored: {stat.pts} </p>\n\n                                    </div>\n                                )}\n                                <hr/>\n\n                            </div>\n                        )}\n\n                    </div>\n\n                ) : (\n\n                    <div>\n                        <h3> PLEASE LOGIN TO SEE YOUR FEED </h3>\n                        <h4> If you don't have an account, you can click here to\n                            <Link to='/signUp'> sign up </Link>\n                        </h4>\n                    </div>\n                )}\n            </div>\n        );\n\n    } // end of render\n\n}; // end of Feeds\n\nexport default connect(mapStates, mapDispatch)(Feed);\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Feed from './Feed';\nimport {connect} from 'react-redux';\n\nconst mapStates = (state) => {\n    return {\n        user: state.loginReducer.user\n    };\n};\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        if(this.props.user.id)\n            return (\n                <div>\n                    <h1> Basketcase </h1>\n                    <NavBar />\n                    <Feed />\n                </div>\n            );\n        else {\n            return (\n\n                <div>\n                    <h1> Basketcase </h1>\n                    <NavBar />\n\n                </div>\n            );\n        }\n    };\n};\n\nexport default connect(mapStates, null)(Home);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport NavBar from './NavBar';\nimport {userLogin} from '../actions/LoginActions';\nimport {fetchFavoritesThunk} from '../actions/FavoritesActions';\n\n\nconst mapStates = (state) => {\n    return {\n        user: state.loginReducer.user\n    };\n\n}; // end of mapStates\n\n\nconst mapDispatch = (dispatch) => {\n\n    return {\n        userLogin: (user) => {\n            dispatch(userLogin(user))\n        },\n        fetchFavorites: (id) => {\n            dispatch(fetchFavoritesThunk(id))\n        }\n    }\n}; // end of mapDispatch\n\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n\n    }; // end of constructor\n\n\n    handleChange = event => {\n\n        this.setState({[event.target.name]: event.target.value })\n\n    }; // end of handleChange\n\n\n    handleSubmit = () => {\n\n        const user = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.userLogin(user);\n\n    }; // end of handleSubmit\n\n\n    render() {\n\n        return (\n            <div>\n\n                <NavBar/>\n\n                <h1> Please Login Below </h1>\n\n                <form name='Login'>\n                    <input type='text' name='email' placeholder='Email'\n                        onChange={this.handleChange}/> <br/>\n\n                    <input type='password' name='password' placeholder='Password'\n                        onChange={this.handleChange}/> <br/>\n                </form>\n\n                <button type='submit' onClick={this.handleSubmit}> Submit </button>\n\n                {this.props.user.id && <Redirect to='/' />}\n\n            </div>\n        );\n\n    }; // end of render\n\n}; // end of Login class\n\nexport default connect(mapStates, mapDispatch)(Login);\n","import React, {Component} from 'react';\nimport NavBar from './NavBar';\nimport {Link} from 'react-router-dom';\nimport {createUserThunk} from '../actions/SignUpActions';\nimport {connect} from 'react-redux';\n\nconst mapStates = (state) => {\n    return {\n        user: state.user\n    };\n}; // end of mapStates\n\nconst mapDispatch = (dispatch) => {\n    return {\n        createUser: (newUser) => {\n            dispatch(createUserThunk(newUser));\n        }\n    };\n}\n\nclass SignUp extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n        };\n    }; // end of constructor\n\n\n    handleChange = event => {\n\n      this.setState({ [event.target.name]: event.target.value });\n\n    }; // end of handleChange\n\n\n    handleSubmit = () => {\n\n        const newUser = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n      this.props.createUser(newUser);\n\n    }; // end of handleSubmit\n\n\n    render() {\n\n        return (\n\n            <div>\n\n                <NavBar/>\n\n                <h1> Please Sign Up Below </h1>\n\n                <p>\n                    If you already have an account, click here to <Link to='/Login'> login </Link>\n                </p>\n\n                <form name=\"SignUp\">\n                    <h2> Please Enter Your Email </h2> <br/>\n                    <input type='text' name='email' placeholder='Email'\n                        onChange={this.handleChange}/> <br/>\n                    <h2> Please Enter a Password </h2> <br/>\n                    <input type='password' name='password' placeholder='Password'\n                        onChange={this.handleChange}/> <br/>\n                </form> <br/>\n\n                <Link to='/'>\n                    <button type='submit' onClick={this.handleSubmit}> Create Account </button>\n                </Link>\n            </div>\n        );\n\n    }; // end of render\n\n}; // end of SignUp class\n\nexport default connect(mapStates, mapDispatch)(SignUp);\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {teamObject} from './teams';\nimport NavBar from './NavBar';\nimport {addFavoriteThunk, deleteFavoriteThunk} from '../actions/FavoritesActions';\nimport {connect} from 'react-redux';\n\n\nconst mapState = (state) => {\n\n\treturn {\n\t\tuser: state.loginReducer.user\n\t};\n}\n\nconst mapDispatch = (dispatch) => {\n\n\treturn {\n\t\taddFavorite: (playerId, userId) => {\n\t\t\tdispatch(addFavoriteThunk(playerId, userId));\n\t\t},\n\t\tdeleteFavorite: (playerId, userId) => {\n\t\t\tdispatch(deleteFavoriteThunk(playerId, userId));\n\t\t}\n\t};\n\n} // end of mapDispatch\n\n\n//passes in ID through react-routing, which will be used as a state and passes as a parameter\n\nclass SinglePlayer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: this.props.match.params.id, //no longer dummy data\n\t\t\tstats: [], //state for player game info per game\n\t\t\tinfo:[], //player info\n\t\t\tgameID: \"48760\", //dummy gameID\n\t\t\tfavorite: false,\n\t\t}\n\t}\n\n\t//function for fetching statistics from API\n\tfetchSinglePlayerStats = () => {\n\n\tconst url = \"https://www.balldontlie.io/api/v1/stats\";\n\tconst query = \"?seasons[]=2018&player_ids[]=\";\n\n\t//routing passed id for a single specific player\n\t//let id = this.props.player\n\taxios.get(url + query + this.state.id)\n\t\t.then(response => {\n\t\t\t// console.log(\"game info\", response.data.data)\n\t\t\tconst result = response.data.data.map(gameInfo => {\n\t\t\t\tconst visitorId = gameInfo.game.visitor_team_id\n\t\t\t\tconst homeTeam = teamObject.data.find(elem => elem.id === gameInfo.game.home_team_id)\n\t\t\t\tconst teamInfo = teamObject.data.find(elem => elem.id === visitorId)\n\t\t\t\tgameInfo.game.visitorInfo = teamInfo\n\t\t\t\tgameInfo.game.homeInfo = homeTeam\n\t\t\t\treturn gameInfo;\n\t\t\t})\n\n\t\t\tconst gameIDs = result.map(gameStats => gameStats.game.id) //specifies location of data to set\n\n\t\t\tconsole.log(result, \"result\")\n\n\t\t\t//sorts the objects by date\n\t\t\tconst playerInfo = result.sort((a, b) => {\n\n                   return new Date(b.game.date) - new Date(a.game.date);\n               });\n\n\t\t\tthis.setState({stats: playerInfo}); //sets the state for result and gameIDs (gameIDs takes the mapped)\n\n\t\t})\n\t\t.catch(err => console.log(err));\n\n\t};\n\n\tfetchPlayerInformation = () => {\n\t\tconst url = \"https://www.balldontlie.io/api/v1/players/\"\n\n\t\taxios.get(url + this.state.id)\n\t\t\t.then(response => {\n\t\t\t\t//console.log(response)\n\t\t\t\tlet result = response.data\n\t\t\t\tthis.setState({info: [result]});\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\n\t}\n\n\t//instead of double axios call to get game info from player stat\n\t//have a seperate state that stores all the teams with there approriate team ID\n\n\n\tfavorite = (id) => {\n\n\t\tthis.setState({favorite: true})\n\t\tthis.props.addFavorite(id, this.props.user.id);\n\t}\n\n\tunFavorite = (id) => {\n\n\t\tthis.setState({favorite: false})\n\t\tthis.props.deleteFavorite(id, this.props.user.id);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.fetchSinglePlayerStats()/* fetches player stats for games*/\n\t\tthis.fetchPlayerInformation() /* fetches general player information */\n\t}\n\n\n\trender() {\n\n\t\t// console.log(\"this is the state\", this.state)\n\n\t\treturn (\n\n\t\t\t<div>\n\n\t\t\t\t<NavBar />\n\n\t\t\t\t{!this.state.favorite ? (\n\t\t\t\t\t<button onClick={() => this.favorite(this.state.id)}> Favorite </button>\n\t\t\t\t) : (\n\t\t\t\t\t<button onClick={() => this.unFavorite(this.state.id)}> Unfavorite </button>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t{this.state.info.map(pass =>\n\t\t\t\t\t<div>\n\n\t\t\t\t\t\t{pass.first_name} {pass.last_name} <br></br>\n\t\t\t\t\t\tHeight: {pass.height_feet}' {pass.height_inches}\" <br></br>\n\t\t\t\t\t\tWeight: {pass.weight_pounds} <br></br>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\tTeam: {pass.team.full_name} | {pass.team.conference} Conference <br></br>\n\t\t\t\t\t\tPosition: {pass.position} <br></br>\n\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{this.state.stats.map(pass =>\n\t\t\t\t\t(<div>\n\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\tGame Date: {pass.game.date} <br></br>\n\t\t\t\t\t\t{pass.game.homeInfo.full_name}:\t{pass.game.home_team_score} <br></br>\n\t\t\t\t\t\t{pass.game.visitorInfo.full_name}: {pass.game.visitor_team_score} <br></br>\n\t\t\t\t\t\tPoints: {pass.pts}<br></br>\n\t\t\t\t\t\tRebounds: {pass.dreb}<br></br>\n\t\t\t\t\t\tAssists: {pass.ast}<br></br>\n\t\t\t\t\t\tField Goal %: {pass.fg_pct}<br></br>\n\t\t\t\t\t\tBlocks: {pass.blk}<br></br>\n\t\t\t\t\t\tFree Throw %: {pass.ft_pct} <br></br>\n\n\t\t\t\t\t</div>)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(mapState, mapDispatch)(SinglePlayer);\n","import React, {Component} from 'react';\n\nclass PlayerResults extends Component {\n\n\n\n};\n\nexport default PlayerResults;\n","import React, {Component} from 'react';\nimport NavBar from './NavBar';\nimport {Link} from 'react-router-dom';\nimport {addFavoriteThunk, deleteFavoriteThunk, fetchFavoritesThunk} from '../actions/FavoritesActions';\nimport {connect} from 'react-redux';\n\n\nclass Favorites extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t// array of playerIds that a user\n\t\t\t// has favorited fetched from db on a session\n\t\t\tfavorites: []\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<h1>Favorites</h1>\n\t\t\t{/* this.props.favorites ? \"hello\" : \"bye\" */}\n\t\t\t{/*this.props.favorites[0]*/}\n\t\t\t</div>\n\t\t)\n\t}\n};\n\n\n\n\nconst mapStates = (state) => {\n\t//console.log(\"my redux store\", state)\n    return {\n        favorites: state.favoriteReducer,\n        user: state.loginReducer.user\n    };\n};\n\nconst mapDispatch = (dispatch) => ({\n        addFavorite: (playerID) => dispatch(addFavoriteThunk(playerID)),\n        deleteFavorite: (playerID) => dispatch(deleteFavoriteThunk(playerID)),\n        fetchFavorites: (userID) => dispatch(fetchFavoritesThunk(userID))\n\n\n});\n\nexport default connect(mapStates,mapDispatch)(Favorites);\n","import React, {Component} from 'react';\nimport {Route, BrowserRouter as Router, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {getMe} from './actions/LoginActions';\nimport store from './Store';\nimport Home from './components/Home';\nimport PlayerSearch from './components/PlayerSearch';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport PlayerResults from './components/PlayerResults';\nimport SinglePlayer from './components/SinglePlayer';\nimport Favorites from './components/Favorites';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n    };\n\n    componentDidMount () {\n        //console.log(this.props);\n        this.props.intializeData()\n    };\n\n    render() {\n\n        //console.log(this.props);\n\n        const HomeComponent = () => {\n            return <Home/>\n        };\n\n        const PlayerResultsComponent = () => {\n            return <PlayerSearch/>\n        };\n\n        const LoginComponent = () => {\n            return <Login/>\n        };\n\n        const SignUpComponent = () => {\n            return <SignUp/>\n        };\n\n        const PlayerSearchComponent = () => {\n            return <PlayerSearch/>\n        };\n\n        const SinglePlayerComponent = () => {\n            return <SinglePlayer/>\n        }\n\n        const FavoritesComponent = () => {\n            return <Favorites/>\n        }\n\n\n        return (\n\n            <Router>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/login' component={Login} />\n                <Route exact path='/signUp' component={SignUp} />\n                <Route exact path='/player' component={PlayerSearch} />\n                <Route exact path='/player/:id' render={props => <SinglePlayer{...props} />} />\n                <Route exact path='/favorites' component={FavoritesComponent} />\n            </Router>\n        );\n    };\n};\n\nconst mapDispatch = (dispatch) => {\n\n    return {\n        intializeData: () => {\n            dispatch(getMe())\n        }\n    }\n};\n\nexport default connect(null, mapDispatch)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}